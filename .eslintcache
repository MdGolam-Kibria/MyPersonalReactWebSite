[{"D:\\react rabbil\\user_panel\\src\\index.js":"1","D:\\react rabbil\\user_panel\\src\\reportWebVitals.js":"2","D:\\react rabbil\\user_panel\\src\\App.js":"3","D:\\react rabbil\\user_panel\\src\\componants\\topbanner\\TopBanner.js":"4","D:\\react rabbil\\user_panel\\src\\componants\\services\\services.js":"5","D:\\react rabbil\\user_panel\\src\\componants\\topNavigation\\TopNavigation.js":"6","D:\\react rabbil\\user_panel\\src\\componants\\analysis\\Analysis.js":"7","D:\\react rabbil\\user_panel\\src\\componants\\summary\\Summary.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":532,"mtime":1608920360144,"results":"12","hashOfConfig":"10"},{"size":1184,"mtime":1608572209541,"results":"13","hashOfConfig":"10"},{"size":2410,"mtime":1608919644160,"results":"14","hashOfConfig":"10"},{"size":3205,"mtime":1608572223295,"results":"15","hashOfConfig":"10"},{"size":4064,"mtime":1608576669270,"results":"16","hashOfConfig":"10"},{"size":5152,"mtime":1608926996869,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"2xvzkv",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\react rabbil\\user_panel\\src\\index.js",[],["36","37"],"D:\\react rabbil\\user_panel\\src\\reportWebVitals.js",[],"D:\\react rabbil\\user_panel\\src\\App.js",[],"D:\\react rabbil\\user_panel\\src\\componants\\topbanner\\TopBanner.js",[],"D:\\react rabbil\\user_panel\\src\\componants\\services\\services.js",["38","39","40"],"D:\\react rabbil\\user_panel\\src\\componants\\topNavigation\\TopNavigation.js",["41","42"],"import React, {Component, Fragment} from 'react';\r\nimport {Nav, Navbar, NavDropdown} from \"react-bootstrap\";\r\nimport whiteLogo from '../../asset/image/navlogowhite.svg'\r\nimport blueLogo from '../../asset/image/navlogoscroll.svg'\r\n\r\nimport \"../../asset/css/custom.css\"\r\nimport \"../../asset/css/bootstrap.min.css\"\r\n\r\nclass TopNavigation extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            navBarTitle: 'navTitle',//initialize css class as a state object\r\n            navBarLogo: [whiteLogo],//for nav logo\r\n            nabBarBackground: 'navBackground',\r\n            navItemColor: 'navItem'\r\n        }\r\n    }\r\n\r\n    onScroll = () => {\r\n        if (window.scrollY > 100) {//means if i scroll down means above of 100% of screen then...\r\n            this.setState({\r\n                navBarTitle: 'navTitleScroll',\r\n                navBarLogo: [blueLogo],\r\n                nabBarBackground: 'navBackgroundScroll',\r\n                navItemColor: 'navItemScroll'\r\n            })\r\n        } else if (window.scrollY < 100) {//means if i scroll up means less of 100% of screen then...\r\n            this.setState({\r\n                navBarTitle: 'navTitle',\r\n                navBarLogo: [whiteLogo],\r\n                nabBarBackground: 'navBackground',\r\n                navItemColor: 'navItem'/**here {navItem is a css class like above} */\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {//this method from react lifeCycle.....if i want to change something after load page runtime/or event call this method more help for me\r\n        window.addEventListener('scroll', this.onScroll)\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Navbar className={this.state.nabBarBackground/**for set navBar background from state*/} fixed=\"top\"\r\n                        collapseOnSelect expand=\"lg\" variant=\"dark\">\r\n                    <Navbar.Brand className={this.state.navBarTitle/** call from state*/} href=\"#home\">\r\n                        <img src={this.state.navBarLogo}/>\r\n                        <span> </span>Golam Kibria</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\"/>\r\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                        </Nav>\r\n                        <Nav>\r\n                            <Nav.Link className={this.state.navItemColor} href=\"#deets\">HOME</Nav.Link>\r\n                            <Nav.Link className={this.state.navItemColor} href=\"#deets\">SERVICES</Nav.Link>\r\n                            <Nav.Link className={this.state.navItemColor} href=\"#deets\">COURSES</Nav.Link>\r\n                            <Nav.Link className={this.state.navItemColor} href=\"#deets\">PORTFOLIO</Nav.Link>\r\n                            <Nav.Link className={this.state.navItemColor} href=\"#deets\">CONTACT</Nav.Link>\r\n                            <Nav.Link className={this.state.navItemColor} href=\"#deets\">ABOUT</Nav.Link>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TopNavigation;","D:\\react rabbil\\user_panel\\src\\componants\\analysis\\Analysis.js",[],"D:\\react rabbil\\user_panel\\src\\componants\\summary\\Summary.js",["43"],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":21,"column":33,"nodeType":"50","endLine":21,"endColumn":53},{"ruleId":"48","severity":1,"message":"49","line":30,"column":33,"nodeType":"50","endLine":30,"endColumn":57},{"ruleId":"48","severity":1,"message":"49","line":39,"column":33,"nodeType":"50","endLine":39,"endColumn":53},{"ruleId":"51","severity":1,"message":"52","line":2,"column":22,"nodeType":"53","messageId":"54","endLine":2,"endColumn":33},{"ruleId":"48","severity":1,"message":"49","line":49,"column":25,"nodeType":"50","endLine":49,"endColumn":59},{"ruleId":"51","severity":1,"message":"55","line":4,"column":30,"nodeType":"53","messageId":"54","endLine":4,"endColumn":36},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'NavDropdown' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]